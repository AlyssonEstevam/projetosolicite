/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bean.Cliente;
import bean.Pagamento;
import bean.Usuario;
import bean.VendaServico;
import dao.ClienteDao;
import dao.PagamentoDao;
import dao.UsuarioDao;
import dao.VendaServicoDao;
import static gui.TelaRealizarPagamento.getData;
import static gui.TelaRealizarVendaServico.getData;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Alysson
 */
public class TelaAlterarPagamento extends javax.swing.JFrame {

    /**
     * Creates new form TelaRealizarVendaServico
    */
    Pagamento pagamentoAntigo;
    String responsavel;
    
    public TelaAlterarPagamento(Pagamento p, String responsavel) {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.setResizable(false);
        txtId.setEditable(false);
        txtData.requestFocus();
        this.pagamentoAntigo = p;
        this.responsavel = responsavel;
        btLimparActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btLimpar = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();
        txtData = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        cbClassificacao = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtMotivo = new javax.swing.JTextField();
        txtFornecedor = new javax.swing.JTextField();
        txtValorTotal = new javax.swing.JTextField();
        txtValoresAPagar = new javax.swing.JTextField();
        txtVencimento = new javax.swing.JFormattedTextField();
        txtValoresPagos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 102));
        jLabel9.setText("Data:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alterar Pagamento");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Alterar Pagamento");

        btLimpar.setBackground(new java.awt.Color(0, 0, 102));
        btLimpar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btLimpar.setForeground(new java.awt.Color(255, 255, 255));
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btConfirmar.setBackground(new java.awt.Color(0, 0, 102));
        btConfirmar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btConfirmar.setForeground(new java.awt.Color(255, 255, 255));
        btConfirmar.setText("Confirmar");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        txtData.setBackground(new java.awt.Color(0, 0, 102));
        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtData.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtData.setCaretColor(new java.awt.Color(255, 255, 255));
        txtData.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("Data:");

        cbClassificacao.setBackground(new java.awt.Color(0, 0, 102));
        cbClassificacao.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbClassificacao.setForeground(new java.awt.Color(255, 255, 255));
        cbClassificacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "CMV", "CPV", "Despesas Administrativas", "Despesas com Instalações", "Despesas Comerciais" }));
        cbClassificacao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbClassificacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbClassificacaoItemStateChanged(evt);
            }
        });
        cbClassificacao.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbClassificacaoPropertyChange(evt);
            }
        });
        cbClassificacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbClassificacaoKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Classificação:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 102));
        jLabel10.setText("ID:");

        txtId.setBackground(new java.awt.Color(0, 0, 102));
        txtId.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtId.setCaretColor(new java.awt.Color(255, 255, 255));
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
        });

        txtMotivo.setBackground(new java.awt.Color(0, 0, 102));
        txtMotivo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtMotivo.setForeground(new java.awt.Color(255, 255, 255));
        txtMotivo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMotivo.setCaretColor(new java.awt.Color(255, 255, 255));
        txtMotivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMotivoKeyPressed(evt);
            }
        });

        txtFornecedor.setBackground(new java.awt.Color(0, 0, 102));
        txtFornecedor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        txtFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtFornecedor.setCaretColor(new java.awt.Color(255, 255, 255));
        txtFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFornecedorKeyPressed(evt);
            }
        });

        txtValorTotal.setBackground(new java.awt.Color(0, 0, 102));
        txtValorTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtValorTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtValorTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtValorTotal.setCaretColor(new java.awt.Color(255, 255, 255));
        txtValorTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorTotalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorTotalKeyTyped(evt);
            }
        });

        txtValoresAPagar.setBackground(new java.awt.Color(0, 0, 102));
        txtValoresAPagar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtValoresAPagar.setForeground(new java.awt.Color(255, 255, 255));
        txtValoresAPagar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtValoresAPagar.setCaretColor(new java.awt.Color(255, 255, 255));
        txtValoresAPagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValoresAPagarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValoresAPagarKeyTyped(evt);
            }
        });

        txtVencimento.setBackground(new java.awt.Color(0, 0, 102));
        txtVencimento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtVencimento.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtVencimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtVencimento.setCaretColor(new java.awt.Color(255, 255, 255));
        txtVencimento.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVencimentoKeyPressed(evt);
            }
        });

        txtValoresPagos.setBackground(new java.awt.Color(0, 0, 102));
        txtValoresPagos.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtValoresPagos.setForeground(new java.awt.Color(255, 255, 255));
        txtValoresPagos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtValoresPagos.setCaretColor(new java.awt.Color(255, 255, 255));
        txtValoresPagos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValoresPagosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValoresPagosKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("Motivo:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("Fornecedor:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 102));
        jLabel8.setText("Valor total:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 102));
        jLabel12.setText("Valores a pagar:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 102));
        jLabel13.setText("Vencimento:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 102));
        jLabel14.setText("Valores pagos:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFornecedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValoresAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValoresPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btLimpar)
                .addGap(18, 18, 18)
                .addComponent(btConfirmar)
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(91, 91, 91))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btConfirmar, btLimpar});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtData, txtFornecedor, txtMotivo, txtValorTotal, txtValoresAPagar, txtVencimento});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValoresAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValoresPagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        txtId.setText(pagamentoAntigo.getId()+"");
        txtData.setText(pagamentoAntigo.getData());
        txtMotivo.setText(pagamentoAntigo.getMotivo());
        txtFornecedor.setText(pagamentoAntigo.getFornecedor());
        txtValorTotal.setText((pagamentoAntigo.getValorTotal()+"").replace(".", ","));
        txtValoresAPagar.setText((pagamentoAntigo.getValoresAPagar()+"").replace(".", ","));
        txtVencimento.setText(pagamentoAntigo.getVencimento());
        txtValoresPagos.setText((pagamentoAntigo.getValoresPagos()+"").replace(".", ","));
        cbClassificacao.setSelectedItem(pagamentoAntigo.getClassificacao());
    }//GEN-LAST:event_btLimparActionPerformed

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
        if(cbClassificacao.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Selecione a classificação do pagamento!");
        }else if(!validaData(txtData.getText(), 0)){
            JOptionPane.showMessageDialog(null, "Informe uma data válida!");
        }else if(!validaData(txtVencimento.getText(), 1)){
            JOptionPane.showMessageDialog(null, "Informe uma data de vencimento válida!");
        }else if(txtMotivo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Informe um motivo!");
        }else if(txtFornecedor.equals("")){
            JOptionPane.showMessageDialog(null, "Informe o fornecedor!");
        }else if(txtValorTotal.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Informe o valor total!");
        }else{
            Pagamento p = new Pagamento();
            p.setId(Integer.parseInt(txtId.getText()));
            p.setData(converteData(txtData.getText()));
            p.setMotivo(txtMotivo.getText());
            p.setFornecedor(txtFornecedor.getText());
            p.setValorTotal(Double.parseDouble(txtValorTotal.getText().replace(",", ".")));
            p.setResponsavel(responsavel);
            p.setValoresAPagar(Double.parseDouble(txtValoresAPagar.getText().replace(",", ".")));
            p.setVencimento(converteData(txtVencimento.getText()));
            p.setValoresPagos(Double.parseDouble(txtValoresPagos.getText().replace(",", ".")));
            p.setClassificacao(cbClassificacao.getSelectedItem().toString());
            
            PagamentoDao pd = new PagamentoDao();
            
            pd.alterar(p, 1);
            btLimparActionPerformed(null);
            this.dispose();
        }
    }//GEN-LAST:event_btConfirmarActionPerformed

    private void cbClassificacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbClassificacaoItemStateChanged
        
        
    }//GEN-LAST:event_cbClassificacaoItemStateChanged

    private void cbClassificacaoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbClassificacaoPropertyChange

    }//GEN-LAST:event_cbClassificacaoPropertyChange

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        
    }//GEN-LAST:event_txtIdKeyPressed

    private void txtMotivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMotivoKeyPressed
        if(evt.getKeyCode()==10){
            txtFornecedor.requestFocus();
        }
    }//GEN-LAST:event_txtMotivoKeyPressed

    private void txtFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFornecedorKeyPressed
        if(evt.getKeyCode()==10){
            txtValorTotal.requestFocus();
        }
    }//GEN-LAST:event_txtFornecedorKeyPressed

    private void txtValorTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorTotalKeyPressed
       if(evt.getKeyCode()==10){
            txtValoresAPagar.requestFocus();
        }
    }//GEN-LAST:event_txtValorTotalKeyPressed

    private void txtValoresAPagarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValoresAPagarKeyPressed
        if(evt.getKeyCode()==10){
            txtVencimento.requestFocus();
        }
    }//GEN-LAST:event_txtValoresAPagarKeyPressed

    private void txtValoresPagosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValoresPagosKeyPressed
        if(evt.getKeyCode()==10){
            cbClassificacao.requestFocus();
        }
    }//GEN-LAST:event_txtValoresPagosKeyPressed

    private void txtValorTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorTotalKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c) && !String.valueOf(c).equals(",") && !String.valueOf(c).equals(".")){
            evt.consume();
        }
    }//GEN-LAST:event_txtValorTotalKeyTyped

    private void txtValoresAPagarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValoresAPagarKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c) && !String.valueOf(c).equals(",") && !String.valueOf(c).equals(".")){
            evt.consume();
        }
    }//GEN-LAST:event_txtValoresAPagarKeyTyped

    private void txtValoresPagosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValoresPagosKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c) && !String.valueOf(c).equals(",") && !String.valueOf(c).equals(".")){
            evt.consume();
        }
    }//GEN-LAST:event_txtValoresPagosKeyTyped

    private void txtDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyPressed
        if(evt.getKeyCode()==10){
            txtMotivo.requestFocus();
        }
    }//GEN-LAST:event_txtDataKeyPressed

    private void txtVencimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVencimentoKeyPressed
        if(evt.getKeyCode()==10){
            txtValoresPagos.requestFocus();
        }
    }//GEN-LAST:event_txtVencimentoKeyPressed

    private void cbClassificacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbClassificacaoKeyPressed
        if(evt.getKeyCode()==10){
            btConfirmarActionPerformed(null);
        }
    }//GEN-LAST:event_cbClassificacaoKeyPressed

    public static String getData(){   
       String data;     
    
       java.util.Date agora = new java.util.Date();
       SimpleDateFormat formata = new SimpleDateFormat("dd/MM/yyyy");     
       data = formata.format(agora);
       
       return data;
   }
    
    String formataData(String data){
        return data.charAt(8)+""+data.charAt(9)+"/"+data.charAt(5)+""+data.charAt(6)+"/"+data.charAt(0)+""+data.charAt(1)+""+data.charAt(2)+""+data.charAt(3);
    }
    
    public boolean validaData(String dataInformada, int vencimento){
        String dataAtual = getData();
        
        if(vencimento==1){
            int diaInformado = Integer.parseInt(dataInformada.charAt(0)+""+dataInformada.charAt(1));
            int mesInformado = Integer.parseInt(dataInformada.charAt(3)+""+dataInformada.charAt(4));
            int anoInformado = Integer.parseInt(dataInformada.charAt(6)+""+dataInformada.charAt(7)+dataInformada.charAt(8)+""+dataInformada.charAt(9));

            if(mesInformado<1 || mesInformado>12){
                return false;
            }else if(mesInformado==1 || mesInformado==3 || mesInformado==5 || mesInformado==7 || mesInformado==8 || mesInformado==10 || mesInformado==12){
                if(diaInformado<1 || diaInformado>31){
                    return false;
                }
            }else if((mesInformado==4 || mesInformado==9 || mesInformado==11)){
                if(diaInformado<1 || diaInformado>30){
                    return false;
                }
            }else if(mesInformado==2){
                if(anoInformado%4==0){
                    if(diaInformado<1 || diaInformado>29){
                        return false;
                    } 
                }else{
                    if(diaInformado<1 || diaInformado>28){
                        return false;
                    } 
                }
            }

            return true;
        }else{
            int diaInformado = Integer.parseInt(dataInformada.charAt(0)+""+dataInformada.charAt(1));
            int mesInformado = Integer.parseInt(dataInformada.charAt(3)+""+dataInformada.charAt(4));
            int anoInformado = Integer.parseInt(dataInformada.charAt(6)+""+dataInformada.charAt(7)+dataInformada.charAt(8)+""+dataInformada.charAt(9));

            int diaAtual = Integer.parseInt(dataAtual.charAt(0)+""+dataAtual.charAt(1));
            int mesAtual = Integer.parseInt(dataAtual.charAt(3)+""+dataAtual.charAt(4));
            int anoAtual = Integer.parseInt(dataAtual.charAt(6)+""+dataAtual.charAt(7)+dataAtual.charAt(8)+""+dataAtual.charAt(9));

            if(anoInformado>anoAtual){
                return false;
            }else if(mesInformado<1 || mesInformado>12 || (anoInformado==anoAtual && mesInformado>mesAtual)){
                return false;
            }else if(mesInformado==1 || mesInformado==3 || mesInformado==5 || mesInformado==7 || mesInformado==8 || mesInformado==10 || mesInformado==12){
                if(diaInformado<1 || diaInformado>31 || (anoInformado==anoAtual && mesInformado==mesAtual && diaInformado>diaAtual)){
                    return false;
                }
            }else if((mesInformado==4 || mesInformado==9 || mesInformado==11)){
                if(diaInformado<1 || diaInformado>30 || (anoInformado==anoAtual && mesInformado==mesAtual && diaInformado>diaAtual)){
                    return false;
                }
            }else if(mesInformado==2){
                if(anoInformado%4==0){
                    if(diaInformado<1 || diaInformado>29 || (anoInformado==anoAtual && mesInformado==mesAtual && diaInformado>diaAtual)){
                        return false;
                    } 
                }else{
                    if(diaInformado<1 || diaInformado>28 || (anoInformado==anoAtual && mesInformado==mesAtual && diaInformado>diaAtual)){
                        return false;
                    } 
                }
            }

            return true;
        }
    }
    
    public String converteData(String data){
        return data.charAt(6)+""+data.charAt(7)+""+data.charAt(8)+""+data.charAt(9)+"-"+data.charAt(3)+""+data.charAt(4)+"-"+data.charAt(0)+""+data.charAt(1);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConfirmar;
    private javax.swing.JButton btLimpar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbClassificacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMotivo;
    private javax.swing.JTextField txtValorTotal;
    private javax.swing.JTextField txtValoresAPagar;
    private javax.swing.JTextField txtValoresPagos;
    private javax.swing.JFormattedTextField txtVencimento;
    // End of variables declaration//GEN-END:variables
}
